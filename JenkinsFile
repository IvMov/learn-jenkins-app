pipeline {
    agent any

    stages {

        // stage('Build') {
        //     steps {
        //         sh '''
        //             echo 'node installed'
        //             node --version
        //             npm --version
        //             # same as npm instal for cicd tools ? 
        //             npm ci
        //             npm run build
        //         '''
        //     }
        // }
        stage("Test") {
            agent{
                docker{
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps{ 
                echo "start tests task"
                sh '''
                    test -f build/index.html
                    npm run test
                '''
                echo "end tests task"
            }
        }
        stage("E2E") {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }
            }
            steps{ 
                echo "start E2E"
                sh '''
                    # install serve locally instead of -g global
                    npm install serve
                    # thats why instead of serve -s build we call local path in build folders -s build
                    node_modules/.bin/serve -s build &
                    sleep 10
                    npx playwright test --reporter=html
                '''
                echo "end E2E"
            }
        }
    }
    post {
        always {
            junit 'j-test-results/junit.xml'
            publishHTML(
                [
                    allowMissing: false, 
                    alwaysLinkToLastBuild: false, 
                    keepAll: false, 
                    reportDir: 'playwright-report', 
                    reportFiles: 'index.html', 
                    reportName: 'Playwright HTML Report', 
                    reportTitles: '', 
                    useWrapperFileDirectly: true
                    ]
                )
        }
    }
}
